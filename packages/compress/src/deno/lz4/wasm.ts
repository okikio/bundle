// @ts-nocheck
export const source = async () => {
  const uint8arr = Uint8Array.from(atob(""), c => c.charCodeAt(0));

  const { decompress } = await import("../zstd/mod.ts");
  return await decompress(uint8arr);
};
let A,
  I = null;
function g() {
  return (
    (null !== I && I.buffer === A.memory.buffer) ||
      (I = new Uint8Array(A.memory.buffer)),
    I
  );
}
let B = 0;
function Q(A, I) {
  const Q = I(1 * A.length);
  return g().set(A, Q / 1), (B = A.length), Q;
}
let C = null;
function E() {
  return (
    (null !== C && C.buffer === A.memory.buffer) ||
      (C = new Int32Array(A.memory.buffer)),
    C
  );
}
function D(A, I) {
  return g().subarray(A / 1, A / 1 + I);
}
export function lz4_compress(I) {
  var g = Q(I, A.__wbindgen_malloc),
    C = B;
  A.lz4_compress(8, g, C);
  var w = E()[2],
    o = E()[3],
    i = D(w, o).slice();
  return A.__wbindgen_free(w, 1 * o), i;
}
export function lz4_decompress(I) {
  var g = Q(I, A.__wbindgen_malloc),
    C = B;
  A.lz4_decompress(8, g, C);
  var w = E()[2],
    o = E()[3],
    i = D(w, o).slice();
  return A.__wbindgen_free(w, 1 * o), i;
}
async function w(A, I) {
  if ("function" == typeof Response && A instanceof Response) {
    if ("function" == typeof WebAssembly.instantiateStreaming)
      try {
        return await WebAssembly.instantiateStreaming(A, I);
      } catch (I) {
        if ("application/wasm" == A.headers.get("Content-Type")) throw I;
        console.warn(
          "`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\n",
          I
        );
      }
    const g = await A.arrayBuffer();
    return await WebAssembly.instantiate(g, I);
  }
  {
    const g = await WebAssembly.instantiate(A, I);
    return g instanceof WebAssembly.Instance ? { instance: g, module: A } : g;
  }
}
async function o(I) {
  void 0 === I && (I = import.meta.url.replace(/\.js$/, "_bg.wasm"));
  ("string" == typeof I ||
    ("function" == typeof Request && I instanceof Request) ||
    ("function" == typeof URL && I instanceof URL)) &&
    (I = fetch(I));
  const { instance: g, module: B } = await w(await I, {});
  // @ts-ignore
  return (A = g.exports), (o.__wbindgen_wasm_module = B), A;
}
export default o;
